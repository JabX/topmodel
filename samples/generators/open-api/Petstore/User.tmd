####
#### ATTENTION CE FICHIER EST GENERE AUTOMATIQUEMENT !
####

---
module: Petstore
tags:
  - petstore
uses:
  - Petstore/Model
---
endpoint:
  name: createUser
  method: POST
  route: user
  description: "Create user"
  preservePropertyCasing: true
  params:
    - composition: User
      name: body
      comment: Non documenté
---
endpoint:
  name: createUsersWithListInput
  method: POST
  route: user/createWithList
  description: "Creates list of users with given input array"
  preservePropertyCasing: true
  params:
    - composition: User
      name: body
      domain: DO_LIST
      comment: Non documenté
  returns:
    composition: User
    name: Result
    comment: Non documenté
---
endpoint:
  name: deleteUser
  method: DELETE
  route: user/{username}
  description: "Delete user"
  preservePropertyCasing: true
  params:
    - name: username
      domain: DO_LIBELLE
      comment: The name that needs to be deleted
---
endpoint:
  name: getUserByName
  method: GET
  route: user/{username}
  description: "Get user by user name"
  preservePropertyCasing: true
  params:
    - name: username
      domain: DO_LIBELLE
      comment: The name that needs to be fetched. Use user1 for testing. 
  returns:
    composition: User
    name: Result
    comment: Non documenté
---
endpoint:
  name: loginUser
  method: GET
  route: user/login
  description: "Logs user into the system"
  preservePropertyCasing: true
  params:
    - name: password
      domain: DO_LIBELLE
      comment: The password for login in clear text

    - name: username
      domain: DO_LIBELLE
      comment: The user name for login
  returns:
    name: Result
    domain: DO_LIBELLE
    required: true
    comment: Non documenté
---
endpoint:
  name: logoutUser
  method: GET
  route: user/logout
  description: "Logs out current logged in user session"
  preservePropertyCasing: true
---
endpoint:
  name: updateUser
  method: PUT
  route: user/{username}
  description: "Update user"
  preservePropertyCasing: true
  params:
    - composition: User
      name: body
      comment: Non documenté

    - name: username
      domain: DO_LIBELLE
      comment: name that need to be deleted
